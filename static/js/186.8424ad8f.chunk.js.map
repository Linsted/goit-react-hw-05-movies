{"version":3,"file":"static/js/186.8424ad8f.chunk.js","mappings":"6SAEaA,EAAc,mCAAG,2FAG7BC,EAAAA,EAAAA,SAAAA,QAAyB,kDAHI,4CAOJA,EAAAA,EAAAA,IAAU,GAAI,CAChCC,OAAQ,CACJC,QATkB,oDAOtBC,EAPsB,yBAcnBA,GAdmB,2CAAH,qDAoBdC,EAAc,mCAAG,WAAOC,GAAP,8EAG7BL,EAAAA,EAAAA,SAAAA,QAAyB,sCAHI,4CAOJA,EAAAA,EAAAA,IAAA,UAAaK,GAAM,CACrCJ,OAAQ,CACNC,QAToB,oDAOtBC,EAPsB,yBAenBA,GAfmB,2CAAH,sDAmBdG,EAAS,mCAAG,WAAOD,GAAP,8EACzBL,EAAAA,EAAAA,SAAAA,QAAyB,sCADA,4CAKCA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPe,oDAKjBC,EALiB,yBAadA,GAbc,2CAAH,sDAiBTI,EAAgB,mCAAG,WAAOF,GAAP,8EAChCL,EAAAA,EAAAA,SAAAA,QAAyB,sCADO,4CAKNA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPsB,oDAKxBC,EALwB,yBAarBA,GAbqB,2CAAH,sDAiBhBK,EAAiB,mCAAG,WAAOC,GAAP,8EAE7BT,EAAAA,EAAAA,SAAAA,QAAyB,4CAFI,4CAMPA,EAAAA,EAAAA,IAAA,GAAc,CAChCC,OAAQ,CACNC,QARuB,mCASvBQ,SAAU,QACVD,MAAAA,EACAE,KAAM,EACNC,eAAe,KAZQ,cAMzBT,EANyB,yBAmBtBA,GAnBsB,2CAAH,qD,wGCjC9B,UAtCgB,WAEZ,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAtBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAKMd,EAAAA,EAAAA,IAAiBW,GALvB,OAKXf,EALW,OAMjBmB,QAAQC,IAAIpB,EAASqB,MACrBT,EAAWZ,EAASqB,KAAKC,SACzBR,GAAW,GARM,gDAUjBK,QAAQC,IAAR,MACAN,GAAW,GAXM,iEAAH,qDAgBlBI,GAEH,GAAE,CAACH,IAKmB,IAAnBJ,EAAQY,QAAiBV,GACzB,wBAAKF,EAAQa,KAAI,SAAAC,GAAM,OAAI,2BAAoB,wBAAKA,EAAOC,UAAY,uBAAID,EAAOE,YAA9CF,EAAOvB,GAApB,OADY,qCAI1C,C","sources":["Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["\nimport axios from \"axios\";\nexport const fetchTrendings = async () => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get('', {\n        params: {\n            api_key: KEY,\n        },\n    });  \n\n    \n    return response;\n\n};\n\n\n\nexport const fetchMovieById = async (id) => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchCast = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}/credits`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchReviewsById = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}/reviews`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  \n    axios.defaults.baseURL = 'https://api.themoviedb.org/3/search/movie';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(``, {\n        params: {\n          api_key: KEY,\n          language: \"en-US\",\n          query,\n          page: 1,\n          include_adult: true,\n          \n            \n        },\n    });  \n\n    \n    return response;\n    \n};","import { fetchReviewsById } from \"Api/Api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => { \n\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const { movieId } = useParams();\n    \n\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            \n        \n        \n        try {\n            const response = await fetchReviewsById(movieId);\n            console.log(response.data)\n            setReviews(response.data.results);\n            setLoading(false);\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n         };\n\n    };\n\n        fetchReviews();\n\n    }, [movieId]);\n\n\n    return (\n\n        reviews.length === 0 && !loading ? <p>No reviews</p> :\n        <ul>{reviews.map(review => <li key={review.id}><h3>{review.author}</h3><p>{review.content}</p></li>\n        )}</ul>\n    )\n};\n\nexport default Reviews;"],"names":["fetchTrendings","axios","params","api_key","response","fetchMovieById","id","fetchCast","fetchReviewsById","fetchMovieByQuery","query","language","page","include_adult","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","fetchReviews","console","log","data","results","length","map","review","author","content"],"sourceRoot":""}