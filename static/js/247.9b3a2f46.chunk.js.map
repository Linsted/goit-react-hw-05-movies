{"version":3,"file":"static/js/247.9b3a2f46.chunk.js","mappings":"6SAEaA,EAAc,mCAAG,2FAG7BC,EAAAA,EAAAA,SAAAA,QAAyB,kDAHI,4CAOJA,EAAAA,EAAAA,IAAU,GAAI,CAChCC,OAAQ,CACJC,QATkB,oDAOtBC,EAPsB,yBAcnBA,GAdmB,2CAAH,qDAoBdC,EAAc,mCAAG,WAAOC,GAAP,8EAG7BL,EAAAA,EAAAA,SAAAA,QAAyB,sCAHI,4CAOJA,EAAAA,EAAAA,IAAA,UAAaK,GAAM,CACrCJ,OAAQ,CACNC,QAToB,oDAOtBC,EAPsB,yBAenBA,GAfmB,2CAAH,sDAmBdG,EAAS,mCAAG,WAAOD,GAAP,8EACzBL,EAAAA,EAAAA,SAAAA,QAAyB,sCADA,4CAKCA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPe,oDAKjBC,EALiB,yBAadA,GAbc,2CAAH,sDAiBTI,EAAgB,mCAAG,WAAOF,GAAP,8EAChCL,EAAAA,EAAAA,SAAAA,QAAyB,sCADO,4CAKNA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPsB,oDAKxBC,EALwB,yBAarBA,GAbqB,2CAAH,sDAiBhBK,EAAiB,mCAAG,WAAOC,GAAP,8EAE7BT,EAAAA,EAAAA,SAAAA,QAAyB,4CAFI,4CAMPA,EAAAA,EAAAA,IAAA,GAAc,CAChCC,OAAQ,CACNC,QARuB,mCASvBQ,SAAU,QACVD,MAAAA,EACAE,KAAM,EACNC,eAAe,KAZQ,cAMzBT,EANyB,yBAmBtBA,GAnBsB,2CAAH,qD,iHChC9B,UArCa,WAIT,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OAlBAE,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAU,mCAAG,8GAGWb,EAAAA,EAAAA,GAAUU,GAHrB,OAGNb,EAHM,OAKZY,EAAUZ,EAASiB,KAAKC,MALZ,gDAOZC,QAAQC,IAAR,MAPY,iEAAH,qDAYbJ,GAEH,GAAE,CAACH,KAGI,+BACJ,wBAAKF,EAAOU,KAAI,SAACC,GAEb,IAAMC,EAAK,0CAAsCD,EAAME,cAEvD,OAAO,2BAAmB,gBAAKC,IAA4B,OAAvBH,EAAME,aAAwBD,EAAQG,EAAWC,IAAI,MAAK,uBAAIL,EAAMM,SAAxFN,EAAMpB,GAAiG,OAGlI,C","sources":["Api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["\nimport axios from \"axios\";\nexport const fetchTrendings = async () => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get('', {\n        params: {\n            api_key: KEY,\n        },\n    });  \n\n    \n    return response;\n\n};\n\n\n\nexport const fetchMovieById = async (id) => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchCast = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}/credits`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchReviewsById = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(`${id}/reviews`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  \n    axios.defaults.baseURL = 'https://api.themoviedb.org/3/search/movie';\n    const KEY = `b2ef32b4f6ff426002ea648d4ef256a9`;\n\n\n  const response = await  axios.get(``, {\n        params: {\n          api_key: KEY,\n          language: \"en-US\",\n          query,\n          page: 1,\n          include_adult: true,\n          \n            \n        },\n    });  \n\n    \n    return response;\n    \n};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"Api/Api\";\nimport fallback from \"../../imgs/not found.png\"\n\n\nconst Cast = () => { \n\n    \n\n    const [actors, setActors] = useState([]);\n    const { movieId } = useParams();\n    \n\n\n    useEffect(() => {\n     const fetchActor = async () => {\n        \n        try {\n            const response = await fetchCast(movieId);\n        \n            setActors(response.data.cast);\n        } catch (error) {\n            console.log(error);\n         };\n\n    };\n\n        fetchActor();\n\n    }, [movieId]);\n\n   \n    return (<>\n        <ul>{actors.map((actor) => {\n            \n            const image = `https://image.tmdb.org/t/p/w300/${actor.profile_path}`\n           \n            return <li key={actor.id}><img src={actor.profile_path !== null ? image : fallback } alt=\"\" /><p>{actor.name}</p></li>} )}</ul>\n    \n    </>);\n};\n\nexport default Cast;"],"names":["fetchTrendings","axios","params","api_key","response","fetchMovieById","id","fetchCast","fetchReviewsById","fetchMovieByQuery","query","language","page","include_adult","useState","actors","setActors","movieId","useParams","useEffect","fetchActor","data","cast","console","log","map","actor","image","profile_path","src","fallback","alt","name"],"sourceRoot":""}